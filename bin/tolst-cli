#!/usr/bin/env node
const { program } = require('commander');
const fs = require('fs');
const package = require('../package');

program
    .option('--init', 'helps to init your app')
    .option('--server', 'starts dev server')
    .option('-p, --port <port>', 'port at which server will listen', 8080)
    .usage('[command] [options]')
    .version(package.version)
    .on('--help', () => {
        console.log('For project initial setup launch tolst-cli --init')
    })
    .parse();

// we can pre-set up the environment for the platform users
const options = program.opts();
console.log(options)

if (options.init) {
    // install some dependencies
    let dependencies = [
        '@tri-tolstiaka/dev-server', 
        'react', 
        'react-dom', 
        'typescript', 
        'ts-loader'
    ]

    require('child_process')
        .execSync(
            'npm i ' + dependencies.join(' '),
            { stdio: 'inherit' }
        )

    const path = require('path')
    const packagepath = path.resolve('package.json') // find relative to the place where process was started

    const package = require(packagepath)
    package.scripts = package.scripts || {}
    package.scripts.start = 'npx tolst-cli --server'

    fs.writeFileSync(packagepath, JSON.stringify(package, null, 2) + '\n')
}

if (options.server) {
    const startServer = require('@tri-tolstiaka/dev-server')
    startServer({ port: options.port })
}